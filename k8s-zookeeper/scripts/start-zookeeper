#!/bin/bash

set -e

HOST=`hostname -s`
DOMAIN=`hostname -d`

function print_servers() {
    for (( i=1; i<=$ZK_REPLICAS; i++ ))
    do
        echo "server.$i=$NAME-$((i-1)).$DOMAIN:$ZK_SERVER_PORT:$ZK_ELECTION_PORT"
    done
}

function create_config() {
    rm -f $CONFIG_FILE
    echo "# This file was autogenerated DO NOT EDIT" >> "$CONFIG_FILE"
    echo "clientPort=$ZK_CLIENT_PORT" >> "$CONFIG_FILE"
    echo "dataDir=$ZOO_DATA_DIR" >> "$CONFIG_FILE"
    echo "dataLogDir=$ZOO_DATA_LOG_DIR" >> "$CONFIG_FILE"

    echo "tickTime=$ZOO_TICK_TIME" >> "$CONFIG_FILE"
    echo "initLimit=$ZOO_INIT_LIMIT" >> "$CONFIG_FILE"
    echo "syncLimit=$ZOO_SYNC_LIMIT" >> "$CONFIG_FILE"

    echo "autopurge.snapRetainCount=$ZOO_AUTOPURGE_SNAPRETAINCOUNT" >> "$CONFIG_FILE"
    echo "autopurge.purgeInterval=$ZOO_AUTOPURGE_PURGEINTERVAL" >> "$CONFIG_FILE"
    echo "maxClientCnxns=$ZOO_MAX_CLIENT_CNXNS" >> "$CONFIG_FILE"
    echo "standaloneEnabled=$ZOO_STANDALONE_ENABLED" >> "$CONFIG_FILE"
    echo "admin.enableServer=$ZOO_ADMINSERVER_ENABLED" >> "$CONFIG_FILE"

    echo "minSessionTimeout=$MIN_SESSION_TIMEOUT" >> "$CONFIG_FILE"
    echo "maxSessionTimeout=$MAX_SESSION_TIMEOUT" >> "$CONFIG_FILE"

    if [ $ZK_REPLICAS -gt 1 ]; then
        print_servers >> $CONFIG_FILE
    fi
    cat $CONFIG_FILE >&2
}

function create_myid() {
    rm -f $ID_FILE
    touch $ID_FILE
    echo $MY_ID >> $ID_FILE
}

function create_jvm_props() {
    rm -f $JAVA_ENV_FILE
    echo "ZOO_LOG_DIR=$ZK_LOG_DIR" >> "$JAVA_ENV_FILE"
    echo "JVMFLAGS=\"-Xmx$ZK_HEAP_SIZE -Xms$ZK_HEAP_SIZE\"" >> "$JAVA_ENV_FILE"
}

function create_log_props() {
    rm -f $LOGGER_PROPS_FILE
    echo "Creating ZooKeeper log4j configuration"
    echo "zookeeper.root.logger=CONSOLE" >> "$LOGGER_PROPS_FILE"
    echo "zookeeper.console.threshold=$LOG_LEVEL" >> "$LOGGER_PROPS_FILE"
    echo "log4j.rootLogger=\${zookeeper.root.logger}" >> "$LOGGER_PROPS_FILE"
    echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender" >> "$LOGGER_PROPS_FILE"
    echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}" >> "$LOGGER_PROPS_FILE"
    echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout" >> "$LOGGER_PROPS_FILE"
    echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n" >> "$LOGGER_PROPS_FILE"
}

# MIN_SESSION_TIMEOUT=${MIN_SESSION_TIMEOUT:- $((TICK_TIME*2))}
# MAX_SESSION_TIMEOUT=${MAX_SESSION_TIMEOUT:- $((TICK_TIME*20))}

ID_FILE="$ZOO_CONF_DIR/myid"
CONFIG_FILE="$ZOO_CONF_DIR/zoo.cfg"
LOGGER_PROPS_FILE="$ZOO_CONF_DIR/log4j.properties"
JAVA_ENV_FILE="$ZOO_CONF_DIR/java.env"
if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
    NAME=${BASH_REMATCH[1]}
    ORD=${BASH_REMATCH[2]}
else
    echo "Fialed to parse name and ordinal of Pod"
    exit 1
fi

MY_ID=$((ORD+1))

create_config && create_myid && create_jvm_props && create_log_props && exec zkServer.sh start-foreground